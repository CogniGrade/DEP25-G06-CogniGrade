<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Course - CP301</title>
  <link rel="stylesheet" href="student-styles.css" />

</head>
<body>
  <!-- Header -->
  <header class="topbar">
    <div class="left">
      <button class="menu-btn">☰</button>
      <img src="classroom-logo.png" alt="Logo" class="logo" width="30" height="30" />
      <h2>AutoGrade</h2>
    </div>
    <div class="search-bar">
      <input type="text" placeholder="Search Courses" />
    </div>
    <div class="right">
      <button class="add-btn">+</button>
      <a href="profile.html">
        <img src="profile-pic.jpg" alt="Profile Picture" class="profile-pic" />
      </a>
    </div>
  </header>

  <div class="dashboard-container">
    <!-- Sidebar -->
    <aside class="sidebar">
      <nav class="menu">
        <a href="#" class="menu-item">
          <span class="menu-icon">🏠</span>
          <span class="menu-text">&nbsp; Home</span>
        </a>
        <a href="#" class="menu-item">
          <span class="menu-icon">📚</span>
          <span class="menu-text">&nbsp; Teaching</span>
        </a>
        <a href="#" class="menu-item">
          <span class="menu-icon">🎓</span>
          <span class="menu-text">&nbsp; Enrolled</span>
        </a>
        <a href="#" class="menu-item">
          <span class="menu-icon">📂</span>
          <span class="menu-text">&nbsp; Archived</span>
        </a>
        <a href="#" class="menu-item">
          <span class="menu-icon">⚙️</span>
          <span class="menu-text">&nbsp; Settings</span>
        </a>
      </nav>
      <a href="login.htm" class="logout" style="display: block; margin-top: 20px; text-decoration: none; color: #fff;">
        <span class="menu-icon">🔒</span>
        <span class="menu-text">Logout</span>
      </a>
    </aside>

    <!-- Main Content -->
    <main class="content">
      <!-- Tabs -->
      <nav class="tabs">
        <button class="tab-link active" onclick="openTab(event, 'announcements')">Announcements</button>
        <button class="tab-link" onclick="openTab(event, 'exams')">Exams</button>
        <button class="tab-link" onclick="openTab(event, 'people')">People</button>
      </nav>

      <!-- ANNOUNCEMENTS TAB -->
      <div id="announcements" class="tab-content" style="display: block;">
        <div class="announcement-container">
          <!-- Announcement Input -->
          <div
            id="announceInput"
            class="announce-input"
            contenteditable="true"
            onfocus="expandAnnouncement()"
            data-placeholder="Announce something to your class..."
          ></div>

          <!-- Toolbar (appears when user focuses or starts typing) -->
          <div class="toolbar" id="toolbar">
            <div>
              <button onclick="formatText('bold', this)"><b>B</b></button>
              <button onclick="formatText('italic', this)"><i>I</i></button>
              <button onclick="formatText('underline', this)"><u>U</u></button>
              <button onclick="formatText('strikeThrough', this)"><s>S</s></button>
            </div>
            <div>
              <button class="cancel-btn" onclick="cancelAnnouncement()">Cancel</button>
              <button class="post-btn" onclick="postAnnouncement()">Post</button>
            </div>
          </div>
          <!-- Posted Announcements -->
          <div id="announcementList" class="announcement-list"></div>
        </div>
      </div>
      <!-- END OF ANNOUNCEMENTS TAB -->

      <!-- EXAMS TAB -->
      <div id="exams" class="tab-content" style="display: none;">
        <div class="exam-container">
          <div class="exam-box">
            <h2>Quiz 1</h2>
            <p><strong>Marks:</strong> 85/100</p>
            <p>December 15, 2023</p>
            <button onclick="redirectTo('script')">View Script</button>
          </div>
          <div class="exam-box">
            <h2>Quiz 2</h2>
            <p><strong>Marks:</strong> 90/100</p>
            <p>December 16, 2023</p>
            <button onclick="redirectTo('script')">View Script</button>
          </div>
          <div class="exam-box">
            <h2>Quiz 3</h2>
            <p><strong>Marks:</strong> 88/100</p>
            <p>December 17, 2023</p>
            <button onclick="redirectTo('script')">View Script</button>
          </div>
        </div>
      </div>
      <!-- END OF EXAMS TAB -->

      <!-- PEOPLE TAB -->
      <div id="people" class="tab-content" style="display: none;">
        <h3>Teachers</h3>
        <ul class="people-list">
          <li>👨‍🏫 Puneet Goyal</li>
        </ul>
        <h3>Students</h3>
        <ul class="people-list">
          <li>👨‍🎓 Rahul Sharma</li>
          <li>👩‍🎓 Ananya Singh</li>
          <li>👨‍🎓 Rohan Mehta</li>
        </ul>
      </div>
      <!-- END OF PEOPLE TAB -->
    </main>
  </div>

  <script>
    // ===== SIDEBAR COLLAPSE =====
    document.addEventListener("DOMContentLoaded", function () {
      const menuButton = document.querySelector(".menu-btn");
      const sidebar = document.querySelector(".sidebar");
      menuButton.addEventListener("click", function () {
        sidebar.classList.toggle("collapsed");
      });
    });

    // ===== TABS HANDLER =====
    function openTab(event, tabName) {
      const tabs = document.getElementsByClassName("tab-content");
      for (let tab of tabs) {
        tab.style.display = "none";
      }
      document.getElementById(tabName).style.display = "block";

      const tabLinks = document.getElementsByClassName("tab-link");
      for (let link of tabLinks) {
        link.classList.remove("active");
      }
      event.currentTarget.classList.add("active");
    }

    // ===== REDIRECT HANDLER (Exams) =====
    function redirectTo(page) {
      if (page === "script") {
        window.location.href = "scriptPage.htm";
      }
    }

    // ===== ANNOUNCEMENTS FEATURE =====
    let announcements = JSON.parse(localStorage.getItem("announcements")) || [];

    // Expand announcement input and show toolbar
    function expandAnnouncement() {
      const announceInput = document.getElementById("announceInput");
      const toolbar = document.getElementById("toolbar");
      announceInput.style.minHeight = "80px";
      toolbar.style.display = "flex";
    }

    // Hide toolbar and reset the input
    function cancelAnnouncement() {
      const announceInput = document.getElementById("announceInput");
      const toolbar = document.getElementById("toolbar");
      announceInput.style.minHeight = "40px";
      announceInput.innerHTML = "";
      toolbar.style.display = "none";
    }

    // Apply formatting commands to selected text
    function formatText(command, button) {
      const announceInput = document.getElementById("announceInput");
      announceInput.focus();
      document.execCommand(command, false, null);
      // Toggle active state
      if (document.queryCommandState(command)) {
        button.classList.add("active");
      } else {
        button.classList.remove("active");
      }
    }

    // Post new announcement and save it to localStorage
    function postAnnouncement() {
      const announceInput = document.getElementById("announceInput");
      const text = announceInput.innerHTML.trim();
      if (!text) {
        alert("Please write something before posting.");
        return;
      }
      announcements.push({
        text: text,
        date: new Date().toISOString(),
        teacherName: "Hemlata Gautam"
      });
      localStorage.setItem("announcements", JSON.stringify(announcements));
      displayAnnouncements();
      cancelAnnouncement();
    }

    // Display announcements
    function displayAnnouncements() {
      const list = document.getElementById("announcementList");
      list.innerHTML = "";
      announcements.sort((a, b) => new Date(b.date) - new Date(a.date));

      announcements.forEach((ann, index) => {
        const card = document.createElement("div");
        card.classList.add("announcement-card");

        const dateString = new Date(ann.date).toLocaleString("en-US", {
          month: "short",
          day: "numeric",
          year: "numeric",
          hour: "numeric",
          minute: "numeric"
        });

        card.innerHTML = `
          <div class="announcement-header">
            <img src="profile-pic.png" class="profile-pic" alt="Profile Picture" />
            <div class="announcement-info">
              <span class="teacher-name">${ann.teacherName}</span>
              <span class="announcement-date">${dateString}</span>
            </div>
            <div class="menu-container">
              <button class="menu-btn" onclick="toggleMenu(${index}, event)">⋮</button>
              <div class="menu-options" id="menu-${index}" style="display:none;">
                <button onclick="editAnnouncement(${index})">Edit</button>
                <button onclick="deleteAnnouncement(${index})">Delete</button>
              </div>
            </div>
          </div>
          <div class="announcement-body">
            <p id="announcement-text-${index}" class="announcement-text">${ann.text}</p>
          </div>
        `;
        list.appendChild(card);
      });
    }

    // Toggle menu for edit/delete options
    function toggleMenu(index, event) {
      event.stopPropagation();
      const menus = document.querySelectorAll(".menu-options");
      menus.forEach((menu, i) => {
        if (i === index) {
          menu.style.display = menu.style.display === "block" ? "none" : "block";
        } else {
          menu.style.display = "none";
        }
      });
    }

    // Close any open menus when clicking outside
    document.addEventListener("click", () => {
      const menus = document.querySelectorAll(".menu-options");
      menus.forEach(menu => (menu.style.display = "none"));
    });

    // Delete announcement
    function deleteAnnouncement(index) {
      announcements.splice(index, 1);
      localStorage.setItem("announcements", JSON.stringify(announcements));
      displayAnnouncements();
    }

    // Edit announcement
    function editAnnouncement(index) {
      const textElement = document.getElementById(`announcement-text-${index}`);
      const inputField = document.createElement("div");
      inputField.classList.add("edit-input");
      inputField.contentEditable = "true";
      inputField.innerHTML = announcements[index].text;

      const saveButton = document.createElement("button");
      saveButton.classList.add("save-btn");
      saveButton.textContent = "Save";
      saveButton.onclick = function () {
        saveAnnouncement(index, inputField);
      };

      const container = document.createElement("div");
      container.classList.add("edit-container");
      container.appendChild(inputField);
      container.appendChild(saveButton);

      textElement.parentNode.replaceChild(container, textElement);
      inputField.focus();
    }

    // Save announcement changes
    function saveAnnouncement(index, inputField) {
      const newText = inputField.innerHTML.trim();
      if (!newText) {
        alert("Announcement cannot be empty!");
        return;
      }
      announcements[index].text = newText;
      localStorage.setItem("announcements", JSON.stringify(announcements));
      displayAnnouncements();
    }

    // Load announcements on page load
    window.addEventListener("load", displayAnnouncements);
  </script>
</body>
</html>
        