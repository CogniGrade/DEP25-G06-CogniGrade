<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Cognigrade</title>
    <link rel="stylesheet" href="login-styles.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&family=Playfair+Display:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
</head>
<body>
    <section class="left-section">
        <h1 class="brand-name" style="font-family: 'Playfair Display', serif; font-style: italic; font-weight: 400;">COGNIGRADE</h1>
    </section>
    <section class="right-section">
        <div class="login-container">
            <div class="email-login" style="text-align: center;">
                <h2 style="font-size: 3rem; margin: 0 auto 20px auto; text-align: center; ">Reset Password</h2>
                <!-- Step 1: Request reset code by email -->
                <div id="step1" class="reset-step">
                    <p>Enter your email address to receive a reset code.</p>
                    <form id="forgotPasswordForm">
                        <input type="email" id="email" placeholder="Enter your email" required>
                        <button type="submit">Send Reset Code</button>
                    </form>
                </div>
                <!-- Step 2: Enter new password (only shown when a token is present) -->
                <div id="step2" class="reset-step" style="display: none;">
                    <form id="resetPasswordForm">
                        <input type="password" id="newPassword" placeholder="Enter new password" required>
                        <input type="password" id="confirmPassword" placeholder="Confirm new password" required>
                        <button type="submit">Reset Password</button>
                    </form>
                </div>
                <div id="message"></div>
            </div>
        </div>
    </section>

    <style>
        .reset-step {
            width: 100%;
            max-width: 320px;
            margin: 0 auto;
            text-align: center;
        }
        
        .message {
            margin-top: 1rem;
            padding: 0.75rem;
            border-radius: 4px;
            text-align: center;
        }
        
        .message.success {
            background-color: #d4edda;
            color: #155724;
        }
        
        .message.error {
            background-color: #f8d7da;
            color: #721c24;
        }
    </style>

    <script>
        // Helper function to extract query parameters from the URL
        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // Check if a reset token is provided in the URL
        const token = getQueryParam('token');
        const step1Div = document.getElementById('step1');
        const step2Div = document.getElementById('step2');
        const messageDiv = document.getElementById('message');

        // If token is found, display the reset password form (step2)
        if (token) {
            step1Div.style.display = 'none';
            step2Div.style.display = 'block';
        } else {
            step1Div.style.display = 'block';
            step2Div.style.display = 'none';
        }

        // Handle submission of the "forgot password" form (Step 1)
        document.getElementById('forgotPasswordForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            messageDiv.innerHTML = '';
            const email = document.getElementById('email').value;
            try {
                const response = await fetch('/forgot-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email: email })
                });
                const data = await response.json();
                if (response.ok && data.success) {
                    messageDiv.innerHTML = '<p class="message success">' + data.message + '</p>';
                    // Instruct the user to check their email for the reset link.
                } else {
                    messageDiv.innerHTML = '<p class="message error">' + (data.error || 'Failed to send reset code.') + '</p>';
                }
            } catch (error) {
                messageDiv.innerHTML = '<p class="message error">An error occurred. Please try again.</p>';
            }
        });

        // Handle submission of the reset password form (Step 2)
        document.getElementById('resetPasswordForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            messageDiv.innerHTML = '';
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (!token) {
                messageDiv.innerHTML = '<p class="message error">Reset token not found. Please use the link sent to your email.</p>';
                return;
            }
            
            try {
                const response = await fetch('/reset-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        token: token,
                        new_password: newPassword,
                        confirm_password: confirmPassword
                    })
                });
                const data = await response.json();
                if (response.ok && data.success) {
                    messageDiv.innerHTML = '<p class="message success">' + data.message + '</p>';
                    // Redirect to login page after a short delay
                    setTimeout(() => {
                        window.location.href = '/static/login.htm';
                    }, 2000);
                } else {
                    messageDiv.innerHTML = '<p class="message error">' + (data.error || 'Password reset failed.') + '</p>';
                }
            } catch (error) {
                messageDiv.innerHTML = '<p class="message error">An error occurred. Please try again.</p>';
            }
        });
    </script>
</body>
</html>
